# Generated by Django 4.1 on 2024-01-04 01:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PostalCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_code', models.CharField(max_length=10)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postal_codes_auth', to='ventas.location')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ventas.municipality')),
            ],
        ),
        migrations.AddField(
            model_name='municipality',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ventas.state'),
        ),
        migrations.CreateModel(
            name='Inmueble',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surface', models.DecimalField(decimal_places=2, max_digits=19)),
                ('front', models.DecimalField(decimal_places=2, max_digits=15)),
                ('bottom', models.DecimalField(decimal_places=2, max_digits=15)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('totalprice', models.DecimalField(decimal_places=2, max_digits=19)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('photo', models.ImageField(upload_to='ventas/photos_terrenos')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('street', models.CharField(blank=True, max_length=255)),
                ('number_of', models.CharField(blank=True, max_length=20)),
                ('postal_code', models.CharField(blank=True, max_length=10)),
                ('paraje', models.CharField(blank=True, max_length=255)),
                ('regimen_propiedad', models.CharField(choices=[('Privada', 'Privada'), ('Ejidal', 'Ejidal'), ('Comunal', 'Comunal')], default='Privada', max_length=15)),
                ('uso_suelo', models.CharField(choices=[('Residencial', 'Residencial'), ('Actividades Productivas', 'Actividades Productivas'), ('Equipamiento', 'Equipamiento'), ('Infraestructura', 'Infraestructura'), ('Area Verde', 'Area Verde'), ('Otro', 'Otro')], default='Area Verde', max_length=25)),
                ('status', models.CharField(choices=[('Oferta', 'Oferta'), ('Solicitud', 'Solicitud'), ('Vendido', 'Vendido'), ('Sig', 'Sig')], default='Solicitud', max_length=10)),
                ('sig_location', models.CharField(blank=True, choices=[('Tepexoyuca', 'Tepexoyuca')], max_length=20, null=True)),
                ('ubicacion_en_municipio', models.ImageField(blank=True, null=True, upload_to='ventas/ubicacion_en_municipio')),
                ('croquis_de_ubicacion', models.ImageField(blank=True, null=True, upload_to='ventas/croquis_de_ubicacion')),
                ('croquis_de_del_predio', models.ImageField(blank=True, null=True, upload_to='ventas/croquis_de_del_predio')),
                ('foto_del_predio', models.ImageField(blank=True, null=True, upload_to='ventas/foto_del_predio')),
                ('ortofoto', models.ImageField(blank=True, null=True, upload_to='ventas/photos_terrenos')),
                ('foto_de_posedor_actual', models.ImageField(blank=True, null=True, upload_to='ventas/foto_de_posesor_actual')),
                ('interesados', models.ManyToManyField(blank=True, default=None, related_name='meInteresan', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inmuebles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Colindancias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('Prop', 'Datos propietario'), ('TV', 'Datos terravision')], max_length=20, null=True)),
                ('norte', models.DecimalField(decimal_places=2, default=None, max_digits=6, null=True)),
                ('sur', models.DecimalField(decimal_places=2, default=None, max_digits=6, null=True)),
                ('este', models.DecimalField(decimal_places=2, default=None, max_digits=6, null=True)),
                ('oeste', models.DecimalField(decimal_places=2, default=None, max_digits=6, null=True)),
                ('inmueble', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='colindacia', to='ventas.inmueble')),
            ],
        ),
    ]
